# Car
carmod <- lm(as.matrix(df.w.mem[,3:4]) ~ df.w.mem$bed)
#print(colnames(df.w.mem[c(3,4)]))
#print(Anova(carmod, idata=idata, idesign=~imem, type="III"))
anova.mem <- Anova(carmod, idata=idata, idesign=~imem, type="III")
apa.anova.mem <- apa_print(Anova(carmod, idata=idata, idesign=~imem, type="III"), correction="GG", mse = FALSE)
rm(imem, idata, carmod)
# Descriptives for fixation chacracteristics for social attention
dscr.fixsoc <- df.w.et %>% summarise(mean(fix.face), sd(fix.face), mean(fix.body), sd(fix.body), mean(fixn.face), sd(fixn.face), mean(fixn.body), sd(fixn.body), mean(fixlat.face), sd(fixlat.face), mean(fixlat.body), sd(fixlat.body))
dscr.fixsoc.group <- df.w.et %>% group_by(group) %>% summarise(mean(fix.face), sd(fix.face), mean(fix.body), sd(fix.body), mean(fixn.face), sd(fixn.face), mean(fixn.body), sd(fixn.body), mean(fixlat.face), sd(fixlat.face), mean(fixlat.body), sd(fixlat.body))
# ANOVA Fixations characteristics
## 2 (Group) x 2 (Face/Body) ANOVA
icond <- gl(2,1,labels=c("head","body")) # within-factor
idata <- data.frame(icond)
for (st in seq(5,16,4)) { # Variables 5:16, every 4th: fix.face and fix.noface; fixn.face and ...
carmod <- lm(as.matrix(df.w.et[,st:(st+1)]) ~ df.w.et$group)
#print(Anova(carmod, idata=idata, idesign=~icond, type="III"))
assign(paste0("anova.",colnames(df.w.et)[st]), Anova(carmod, idata=idata, idesign=~icond, type="III"))
assign(paste0("apa.anova.",colnames(df.w.et)[st]), apa_print(Anova(carmod, idata=idata, idesign=~icond, type="III"), correction="GG", mse = FALSE))
}
rm(carmod, idata, icond, st)
# # plots
#
# plot.face.free_vs_mem <- df.l.et %>%
#   filter(fixations=="fix" & region=="face") %>%
#   ggpubr::ggboxplot(x = "fixations", y = "value",
#                 fill = "group", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
#                 add = "jitter", shape = "group") #+
#   #stat_compare_means()
# #plot.face.free_vs_mem
# Fixations Face in Free Viewing vs. Explicit Encoding
for (st in seq(5,16,4)) {
msd <- c(mean(df.w.et[df.w.et$group=="free",st]),sd(df.w.et[df.w.et$group=="free",st]),
mean(df.w.et[df.w.et$group=="mem",st]),sd(df.w.et[df.w.et$group=="mem",st]))
teststat <- t.test(df.w.et[,st] ~ df.w.et$group)
assign(paste0("ttest.",colnames(df.w.et)[st]), data.frame(M.free=msd[1],SD.free=msd[2], M.mem=msd[3], SD.mem=msd[4],  df=teststat$parameter, t=teststat$statistic, p=teststat$p.value))
assign(paste0("apa.ttest.",colnames(df.w.et)[st]), apa_print(t.test(df.w.et[,st] ~ df.w.et$group)))
}
rm(msd, teststat, st)
r_refs(file = "r-references.bib")
library("papaja")
library("tidyverse")
library("car")
#library("ggsignif")
#library("gridExtra")
library("knitr")
library("kableExtra")
rm(list=ls())
pathMEM <- "../01_data/Memory/"
pathET <- "../01_data/prot/"
pathFB <- "../01_data/FB/"
# ALL EYE TRACKING DATA
vpn <- paste0("vpja",ifelse(c(1:78,81:96)<10,"0",""),c(1:78,81:96))
bed <- rep(c("free","mem"),47)
# ORIGINALLY ACQUIRED DATA
#vpn <- paste0("vpja",ifelse(c(1:78)<10,"0",""),c(1:78))
#bed <- rep(c("free","mem"),39)
bed <- bed[!(vpn %in% "vpja23")]  # missing data
vpn <- vpn[!(vpn %in% "vpja23")]
# Loop over subjects
erg <- numeric(); nvalid <- numeric(); cleantime <- numeric()
for (vp in vpn) {
#  print(vp)
prot <- read.csv2(paste0(pathET,vp,"_Fixations.csv"))
# Restrict to trials with valid baseline?
nvalid <- c(nvalid,sum(prot$blok==1))
prot <- prot[prot$blok==1,]
cleantime <- c(cleantime,mean(prot$cleantime))
erg <- rbind(erg,apply(prot[,8:ncol(prot)],2,mean,na.rm=TRUE))
}
df.w.et <- data.frame(code=vpn,group=bed,nvalid,cleantime,erg) %>%
mutate(
code = as.factor(unlist(map(strsplit(as.character(code),"ja"), ~.x[2])))) %>%
rename(vp = code)
df.l.et <- gather(df.w.et, key, value, fix.face:sac.bnongaze, factor_key=TRUE) %>%
mutate(
key = as.character(key),
fixations =
as.factor(
ifelse(startsWith(key, "fix."), "fix",
ifelse(startsWith(key, "fixn."), "fixn",
ifelse(startsWith(key, "fixlat."), "fixlat",
ifelse(startsWith(key, "sac."), "sac", NA))))),
region =
as.factor(
ifelse(endsWith(key, ".face"), "face",
ifelse(endsWith(key, ".body"), "body",
ifelse(endsWith(key, ".gaze"), "gaze",
ifelse(endsWith(key, ".nongaze"), "nongaze",
ifelse(endsWith(key, ".pgaze"), "pgaze",
ifelse(endsWith(key, ".fgaze"), "fgaze",
ifelse(endsWith(key, ".bgaze"), "bgaze",
ifelse(endsWith(key, ".pnongaze"), "pnongaze",
ifelse(endsWith(key, ".fnongaze"), "fnongaze",
ifelse(endsWith(key, ".bnongaze"), "bnongaze",NA)))))))))))) %>%
arrange(vp)
rm(prot, bed, cleantime, nvalid, vp, vpn, erg)
# ALL MEMORY DATA
vpn <- paste0("vpja",ifelse(c(1:78,81:96)<10,"0",""),c(1:78,81:96))
bed <- rep(c("free","mem"),47)
# ORIGINALLY ACQUIRED DATA
#vpn <- pasteo("vpja",ifelse(c(1:78)<10,"0",""),c(1:78))
#bed <- rep(c("free","mem"),39)
# Loop over subjects
erg <- numeric()
for (vp in vpn) {
# print(vp)
prot <- read.csv2(paste0(pathMEM,vp,".csv"))
# Item recalled
gaze <- sum(prot$memgazedat)
nogaze <- sum(prot$memnongazedat)
erg <- rbind(erg,c(gaze,nogaze))
}
df.w.mem <- data.frame(code=vpn,bed,erg) %>%
mutate(
code = as.factor(unlist(map(strsplit(as.character(code),"ja"), ~.x[2])))) %>%
rename(vp = code)
names(df.w.mem) <- c("code","bed","memgaze","memnogaze")
rm(gaze, nogaze, erg, prot, bed, vp, vpn)
df.w.demo <- read_csv2(paste0(pathFB,"Projektarbeit_Dateneingabemaske.csv")) %>%
mutate_at(
vars(AQK_1, AQK_3, AQK_5, AQK_6, AQK_7, AQK_9, AQK_10, AQK_11, AQK_14, AQK_16, AQK_17, AQK_18, AQK_20, AQK_22, AQK_23, AQK_24, AQK_26, AQK_28, AQK_31, AQK_32, AQK_33),
funs(5 - .)) %>% # reverse variables
mutate_at(
vars(AQK_1:AQK_33),
funs(ifelse(. <= 2, 1, ifelse(. <= 4, 0, NA)))) %>% # recode variable
mutate_at(
vars(AQK_1:AQK_33),
funs(ifelse(is.na(.), round(mean(., na.rm = T),0), .))) %>% # replace NAs with mean
transmute(
vp = as.factor(VP_Nr),
sex = as.factor(Demo_Sex),
age = Demo_Alter,
aqk_social = (AQK_1 + AQK_7 + AQK_8 + AQK_10 + AQK_11 + AQK_13 + AQK_14 + AQK_20 + AQK_24 + AQK_28 + AQK_31),
aqk_imagination = (AQK_3 + AQK_5 + AQK_6 + AQK_9 + AQK_16 + AQK_17 + AQK_18 + AQK_22 + AQK_23 + AQK_26 + AQK_32 + AQK_33),
aqk_communication = (AQK_2 + AQK_4 + AQK_12 + AQK_15 + AQK_19 + AQK_21 + AQK_25 + AQK_27 + AQK_29 + AQK_30),
aqk_sumscore = (aqk_social + aqk_imagination + aqk_communication))
# Descriptives for fixation chacracteristics for joint attention
dscr.fix.rpl <- df.w.et %>%
group_by(group) %>%
summarise_at(vars(fix.face:fixlat.nongaze), funs(mean,sd,se=sd(.)/sqrt(n()))) %>% # mit den funs() die variablen vars(von:bis) berechnen
gather(key, measure, fix.face_mean:fixlat.nongaze_se) %>% # ins longformat
mutate(fix = as.factor(map(strsplit(key,"[[:punct:]]"), ~.x[1]) %>% unlist()),
gazed = map(strsplit(key,"[[:punct:]]"), ~.x[2]) %>% unlist(),
gazed = as.factor(substring(gazed,1)),
stat = as.factor(map(strsplit(key,"[[:punct:]]"), ~.x[3]) %>% unlist()),
key = as.factor("replication"),
measure = ifelse(as.character(fix) != "fixlat", round(measure, 3), round(measure, 0))) %>%
select(-measure, everything()) %>% # neusortieren der variablen
select(key, everything())
dscr.fix.rpl$gazed <- factor(dscr.fix.rpl$gazed, levels=c("face", "body", "gaze", "nongaze"))
dscr.fix.zwckl <- data.frame(group="free",fix=c("fix","fix","fix","fix","fixn","fixn","fixn","fixn","fixlat","fixlat","fixlat","fixlat"), gazed=c("gaze","gaze", "nongaze", "nongaze"), stat=c("mean","se"), measure=c(0.08,.01,.07,.01,5.89,.37,5.24,.34,3588,133,4008,166)) # free = person
dscr.sac.rpl <- df.w.et %>%
group_by(group) %>%
summarise_at(vars(sac.pgaze:sac.bnongaze), funs(mean,sd,se=sd(.)/sqrt(n()))) %>% # mit den funs() die variablen vars(von:bis) berechnen
gather(key, measure, sac.pgaze_mean:sac.bnongaze_se) %>% # ins longformat
mutate(stat = as.factor(map(strsplit(key,"[[:punct:]]"), ~.x[3]) %>% unlist()),
area = map(strsplit(key,"[[:punct:]]"), ~.x[2]) %>% unlist(),
area = as.factor(substring(area,1,1)),
gazed = map(strsplit(key,"[[:punct:]]"), ~.x[2]) %>% unlist(),
gazed = as.factor(substring(gazed,2)),
key = as.factor("replication")) %>% #rausnehmen, zur kontrolle, ob alles passt, was oben lÃ¤uft.
select(-measure, everything()) %>% # neusortieren der variablen
select(key, everything())
dscr.sac.zwckl <- data.frame(key=c("zwickel","zwickel"),group=c("free", "free"),gazed=c("gaze", "gaze", "nongaze", "nongaze"),stat=c("mean", "se"),measure=c(.14,0.01,.09,0.01)) # free = person
dscr.mem <- df.w.mem %>% rename( group = bed) %>%
group_by(group) %>%
summarise_at(vars(memgaze:memnogaze), funs(mean,sd,se=sd(.)/sqrt(n()))) %>%
gather(key, value, memgaze_mean: memnogaze_se, factor_key = T) %>%
separate(key, c("key", "stat"), sep = "\\_", extra = "merge") %>%
spread(stat, value) %>%
mutate(lowerSE = mean - se,
upperSE = mean + se)
t1 <- dscr.fix.rpl %>%
filter(group == "free", gazed == "gaze") %>%
select(fix, stat, measure) %>%
mutate(measure = ifelse(fix != "fixlat", measure*100, measure),
Measurements = ifelse(fix == "fixlat", "Fixation latency (in ms)",
ifelse(fix == "fix", "Fixation duration (in %)",
ifelse( fix == "fixn", "Fixation number (in %)",NA)))) %>%
spread(key = "stat", value = "measure") %>%
select(Measurements:se)
t2 <- dscr.fix.rpl %>%
filter(group == "free", gazed == "nongaze") %>%
select(fix, stat, measure) %>%
mutate(measure = ifelse(fix != "fixlat", measure*100, measure)) %>%
spread(key = "stat", value = "measure")
t3 <- dscr.fix.rpl %>%
filter(group == "mem", gazed == "gaze") %>%
select(fix, stat, measure) %>%
mutate(measure = ifelse(fix != "fixlat", measure*100, measure)) %>%
spread(key = "stat", value = "measure")
t4 <- dscr.fix.rpl %>%
filter(group == "mem", gazed == "nongaze") %>%
select(fix, stat, measure) %>%
mutate(measure = ifelse(fix != "fixlat", measure*100, measure)) %>%
spread(key = "stat", value = "measure")
# apa_table(t5,
#           align = c("l", rep("c", 12)),
#           caption = "Mean Fixation Latency (in Milliseconds), relative fixation number (FF), and fixation duration as a function of Group (explicit encoding, free viewing) and object (cued, not gazed at",
#           note = "here is space for a note.",
#           #added_stub_head = "Variables",
#           #col_spanners = list(`free viewing`= c(2,7), `explicit encoding`= c(8,13)),
#           landscape = TRUE
#           )
t6 <- dscr.fix.rpl %>%
filter(group == "free", gazed == "face") %>%
select(fix, stat, measure) %>%
mutate(measure = ifelse(fix != "fixlat", measure*100, measure),
Measurements = ifelse(fix == "fixlat", "Fixation latency (in ms)",
ifelse(fix == "fix", "Fixation duration (in %)",
ifelse( fix == "fixn", "Fixation number (in %)",NA)))) %>%
spread(key = "stat", value = "measure") %>%
select(Measurements:se)
t7 <- dscr.fix.rpl %>%
filter(group == "free", gazed == "body") %>%
select(fix, stat, measure) %>%
mutate(measure = ifelse(fix != "fixlat", measure*100, measure)) %>%
spread(key = "stat", value = "measure")
t8 <- dscr.fix.rpl %>%
filter(group == "mem", gazed == "face") %>%
select(fix, stat, measure) %>%
mutate(measure = ifelse(fix != "fixlat", measure*100, measure)) %>%
spread(key = "stat", value = "measure")
t9 <- dscr.fix.rpl %>%
filter(group == "mem", gazed == "body") %>%
select(fix, stat, measure) %>%
mutate(measure = ifelse(fix != "fixlat", measure*100, measure)) %>%
spread(key = "stat", value = "measure")
# apa_table(t5,
#           align = c("l", rep("c", 12)),
#           caption = "Mean Fixation Latency (in Milliseconds), relative fixation number (FF), and fixation duration as a function of Group (explicit encoding, free viewing) and object (cued, not gazed at",
#           note = "here is space for a note.",
#           #added_stub_head = "Variables",
#           #col_spanners = list(`free viewing`= c(2,7), `explicit encoding`= c(8,13)),
#           landscape = TRUE
#           )
t5 <- cbind(t1,t2[-1],t3[-1],t4[-1]) # only objects
kable(t5, format = "latex", longtable = F, booktabs = T, digits = 0, align =  c('l', rep("c",12)), caption = "Mean Fixation Latency (in Milliseconds), relative fixation number (FF), and fixation duration as a function of Group (explicit encoding, free viewing) and object (cued, uncued)") %>%
add_header_above(c(" ", "cued" = 3, "uncued" = 3, "cued" = 3, "uncued" = 3)) %>%
add_header_above(c(" ", "free viewing" = 6, "explicit encoding" = 6)) %>%
footnote(general = "Here is a footnote.") #%>%
#landscape()
rm(t1,t2,t3,t4,t5)
t10 <- cbind(t6, t7[-1],t8[-1], t9[-1])
kable(t10, format = "latex", booktabs = T, digits = 0, align =  c('l', rep("c",12)), caption = "Mean Fixation Latency (in Milliseconds), relative fixation number, and fixation duration as a function of Group (explicit encoding, free viewing) and person (head and body)") %>%
add_header_above(c(" ", "head" = 3, "body" = 3, "head" = 3, "body" = 3)) %>%
add_header_above(c(" ", "free viewing" = 6, "explicit encoding" = 6)) %>%
footnote(general = "Here is a footnote.") %>%
landscape()
rm(t6,t7,t8,t9,t10)
cTheme = theme(
title = element_text(
size = 8,
family = "Times New Roman", #excluded due to warnings
color = "black"),
text=element_text(
size=12,
family = "Times New Roman", #excluded due to warnings
color = "black"),
axis.title=element_text(
size=12,
family = "Times New Roman", #excluded due to warnings
color = "black"),
axis.line = element_line(
colour = "black"),
panel.grid = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(
size = .01,
colour = "grey"),
panel.background = element_blank(),
legend.text = element_text(
size=12,
color = "black"),
legend.position = "none")
cColors = c("darkgrey", "lightgrey")
cLabels = c("free", "explicit")
cLimitsObjects = c(0,0.17)
p1.fixdur.rpl <- ggplot(subset(dscr.fix.rpl, stat == "mean" & fix == "fix" & gazed %in% c("gaze", "nongaze")), aes(x= group, y= measure, fill = gazed)) +
geom_col(position = "dodge") +
geom_errorbar(aes(
ymin=subset(dscr.fix.rpl, stat == "mean" & fix == "fix" & gazed %in% c("gaze", "nongaze"))$measure - subset(dscr.fix.rpl, stat == "se" & fix == "fix" & gazed %in% c("gaze", "nongaze"))$measure,
ymax=subset(dscr.fix.rpl, stat == "mean" & fix == "fix" & gazed %in% c("gaze", "nongaze"))$measure + subset(dscr.fix.rpl, stat == "se" & fix == "fix" & gazed %in% c("gaze", "nongaze"))$measure),
width=.2,
position=position_dodge(.9)) +
#geom_signif(annotation="***", y_position=.19, xmin=1, xmax=2, tip_length = 0.01, vjust = 0.5) + # free - mem: p < .001
#geom_signif(annotation="***", y_position=.42, xmin=1.188, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # not-gazed free - not-gazed mem: p < .001,
#geom_signif(annotation="**", y_position=.40, xmin=0.81, xmax=1.81, tip_length = 0.01, vjust = 0.5) + # gazed free - gazed mem: p < .003
#geom_signif(annotation="*", y_position=.17, xmin=0.81, xmax=1.188, tip_length = 0.01, vjust = 0.5) + # gazed free - not gazed free: p = .01
#geom_signif(annotation="n.s.", y_position=.17, xmin=1.81, xmax=2.188, tip_length = 0.01, vjust = 0) + # gazed mem - not gazed mem: p = .679
scale_y_continuous(name = element_blank(), labels = scales::percent_format(), limits = cLimitsObjects) +
scale_x_discrete(name = element_blank(), labels=element_blank()) +
scale_fill_manual(name = "Objects", labels = c("cued", "uncued"), values=cColors) +
labs(title = "Objects", subtitle = "Fixation duration")
cLegendObjects <- ggpubr::get_legend(p1.fixdur.rpl)
p1.fixdur.rpl <- p1.fixdur.rpl +
cTheme
p2.fixnum.rpl <- ggplot(subset(dscr.fix.rpl, stat == "mean" & fix == "fixn" & gazed %in% c("gaze", "nongaze")), aes(x= group, y= measure, fill = gazed)) +
geom_col(position = "dodge") +
geom_errorbar(aes(
ymin=subset(dscr.fix.rpl, stat == "mean" & fix == "fixn" & gazed %in% c("gaze", "nongaze"))$measure - subset(dscr.fix.rpl, stat == "se" & fix == "fixn" & gazed %in% c("gaze", "nongaze"))$measure,
ymax=subset(dscr.fix.rpl, stat == "mean" & fix == "fixn" & gazed %in% c("gaze", "nongaze"))$measure + subset(dscr.fix.rpl, stat == "se" & fix == "fixn" & gazed %in% c("gaze", "nongaze"))$measure),
width=.2,
position=position_dodge(.9)) +
## Significanes from duration!!!
#geom_signif(annotation="***", y_position=.19, xmin=1, xmax=2, tip_length = 0.01, vjust = 0.5) + # free - mem: p < .001
#geom_signif(annotation="***", y_position=.42, xmin=1.188, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # not-gazed free - not-gazed mem: p < .001,
#geom_signif(annotation="**", y_position=.40, xmin=0.81, xmax=1.81, tip_length = 0.01, vjust = 0.5) + # gazed free - gazed mem: p < .003
#geom_signif(annotation="*", y_position=.17, xmin=0.81, xmax=1.188, tip_length = 0.01, vjust = 0.5) + # gazed free - not gazed free: p = .01
#geom_signif(annotation="n.s.", y_position=.17, xmin=1.81, xmax=2.188, tip_length = 0.01, vjust = 0) + # gazed mem - not gazed mem: p = .679
scale_y_continuous(name = element_blank(), labels = scales::percent_format(), limits = cLimitsObjects) +
scale_x_discrete(name = element_blank(), labels=element_blank()) +
scale_fill_manual(name = element_blank(), values=cColors) +
labs(title = " ", subtitle = "Fixation number") +
cTheme
p3.fixlat.rpl <- ggplot(subset(dscr.fix.rpl, stat == "mean" & fix == "fixlat" & gazed %in% c("gaze", "nongaze")), aes(x= group, y= measure, fill = gazed)) +
geom_col(position = "dodge") +
geom_errorbar(aes(
ymin=subset(dscr.fix.rpl, stat == "mean" & fix == "fixlat" &  gazed %in% c("gaze", "nongaze"))$measure - subset(dscr.fix.rpl, stat == "se" & fix == "fixlat" & gazed %in% c("gaze", "nongaze"))$measure,
ymax=subset(dscr.fix.rpl, stat == "mean" & fix == "fixlat" &  gazed %in% c("gaze", "nongaze"))$measure + subset(dscr.fix.rpl, stat == "se" & fix == "fixlat" & gazed %in% c("gaze", "nongaze"))$measure),
width=.2,
position=position_dodge(.9)) +
#geom_signif(annotation="***", y_position=3300, xmin=1, xmax=2, tip_length = 0.01, vjust = 0.5) + # free - mem: p < .001
#geom_signif(annotation="***", y_position=.42, xmin=1.188, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # not-gazed free - not-gazed mem: p < .001,
#geom_signif(annotation="***", y_position=.40, xmin=0.81, xmax=1.81, tip_length = 0.01, vjust = 0.5) + # gazed free - gazed mem: p < .001
#geom_signif(annotation="***", y_position=3100, xmin=0.81, xmax=1.188, tip_length = 0.01, vjust = 0.5) + # gazed free - not gazed free: p < .001
#geom_signif(annotation="***", y_position=3100, xmin=1.81, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # gazed mem - not gazed mem: p < .001
scale_y_continuous(name = element_blank(), limits = c(0,3400)) +
scale_x_discrete(name = element_blank(), labels=cLabels) +
scale_fill_manual(name = element_blank(), values=cColors) +
labs(title = " ", subtitle = "Fixation latency") +
cTheme
p4.sac.rpl <- ggplot(subset(dscr.sac.rpl, stat == "mean" & area == "f"), aes(x= group, y= measure, fill = gazed)) +
geom_col(position = "dodge") +
geom_errorbar(aes(
ymin=subset(dscr.sac.rpl, stat == "mean" & area == "f")$measure - subset(dscr.sac.rpl, stat == "se" & area == "f" )$measure,
ymax=subset(dscr.sac.rpl, stat == "mean" & area == "f")$measure + subset(dscr.sac.rpl, stat == "se" & area == "f")$measure),
width=.2,
position=position_dodge(.9)) +
#geom_signif(annotation="***", y_position=.15, xmin=1, xmax=2, tip_length = 0.01, vjust = 0.5) + # free - mem: p < .001
#geom_signif(annotation="***", y_position=.42, xmin=1.188, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # not-gazed free - not-gazed mem: p = .002
#geom_signif(annotation="**", y_position=.40, xmin=0.81, xmax=1.81, tip_length = 0.01, vjust = 0.5) + # gazed free - gazed mem: p < .001
#geom_signif(annotation="***", y_position=.13, xmin=0.81, xmax=1.188, tip_length = 0.01, vjust = 0.5) + # gazed free - not gazed free: p = .001
#geom_signif(annotation="***", y_position=.13, xmin=1.81, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # gazed mem - not gazed mem: p = .001
scale_y_continuous(name = element_blank(), labels = scales::percent_format(), limits = cLimitsObjects) +
scale_x_discrete(name = element_blank(), labels=cLabels) +
scale_fill_manual(name = element_blank(), values = cColors) +
labs(title = " ", subtitle = "Saccades leaving head") +
cTheme
p5.mem.rpl <- dscr.mem %>%
ggplot(aes(x = group, y=mean, fill = key)) +
geom_col(position = "dodge") +
geom_errorbar(aes(
ymin=lowerSE,
ymax=upperSE),
width=.2,
position=position_dodge(.9)) +
#geom_signif(annotation="***", y_position=10.5, xmin=1, xmax=2, tip_length = 0.01, vjust = 0.5) + # free - mem: p < .001
#geom_signif(annotation="***", y_position=.42, xmin=1.188, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # not-gazed free - not-gazed mem: p < .001,
#geom_signif(annotation="**", y_position=.40, xmin=0.81, xmax=1.81, tip_length = 0.01, vjust = 0.5) + # gazed free - gazed mem: p < .003
#geom_signif(annotation="n.s.", y_position=11, xmin=0.81, xmax=1.188, tip_length = 0.01, vjust = 0) + # gazed free - not gazed free: p = .01
#geom_signif(annotation="n.s.", y_position=11, xmin=1.81, xmax=2.188, tip_length = 0.01, vjust = 0) + # gazed mem - not gazed mem: p = .679
scale_y_continuous(name = element_blank(), breaks = seq(0,10, by = 5), limits = c(0,11)) +
scale_x_discrete(name = element_blank(), labels=cLabels) +
scale_fill_manual(name = element_blank(), values=cColors) +
labs(title = " ", subtitle = "Memory performance") +
cTheme
grid.arrange(p1.fixdur.rpl, p2.fixnum.rpl, p3.fixlat.rpl, p4.sac.rpl, p5.mem.rpl, cLegendObjects, layout_matrix = rbind(c(1,2,6), c(3,4,5)))
rm(p1.fixdur.rpl, p2.fixnum.rpl, p3.fixlat.rpl, p4.sac.rpl, p5.mem.rpl, cLegendObjects, cLimitsObjects)
cLimitsHeads = c(0,0.28)
p6.fixdur.rpl <- ggplot(subset(dscr.fix.rpl, stat == "mean" & fix == "fix" & gazed %in% c("face", "body")), aes(x= group, y= measure, fill = gazed)) +
geom_col(position = "dodge") +
geom_errorbar(aes(
ymin=subset(dscr.fix.rpl, stat == "mean" & fix == "fix" & gazed %in% c("face", "body"))$measure - subset(dscr.fix.rpl, stat == "se" & fix == "fix" & gazed %in% c("face", "body"))$measure,
ymax=subset(dscr.fix.rpl, stat == "mean" & fix == "fix" & gazed %in% c("face", "body"))$measure + subset(dscr.fix.rpl, stat == "se" & fix == "fix" & gazed %in% c("face", "body"))$measure),
width=.2,
position=position_dodge(.9)) +
#geom_signif(annotation="***", y_position=.19, xmin=1, xmax=2, tip_length = 0.01, vjust = 0.5) + # free - mem: p < .001
#geom_signif(annotation="***", y_position=.42, xmin=1.188, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # not-gazed free - not-gazed mem: p < .001,
#geom_signif(annotation="**", y_position=.40, xmin=0.81, xmax=1.81, tip_length = 0.01, vjust = 0.5) + # gazed free - gazed mem: p < .003
#geom_signif(annotation="*", y_position=.17, xmin=0.81, xmax=1.188, tip_length = 0.01, vjust = 0.5) + # gazed free - not gazed free: p = .01
#geom_signif(annotation="n.s.", y_position=.17, xmin=1.81, xmax=2.188, tip_length = 0.01, vjust = 0) + # gazed mem - not gazed mem: p = .679
scale_y_continuous(name = element_blank(), labels = scales::percent_format(), limits = cLimitsHeads) +
scale_x_discrete(name = element_blank(), labels=cLabels) +
scale_fill_manual(name = "Persons", labels = c("Head", "Body"), values=cColors) +
labs(title = "Head and Body", subtitle = "Fixation duration")
cLegendHead <- ggpubr::get_legend(p6.fixdur.rpl)
p6.fixdur.rpl <- p6.fixdur.rpl +
cTheme
p7.fixnum.rpl <- ggplot(subset(dscr.fix.rpl, stat == "mean" & fix == "fixn" & gazed %in% c("face", "body")), aes(x= group, y= measure, fill = gazed)) +
geom_col(position = "dodge") +
geom_errorbar(aes(
ymin=subset(dscr.fix.rpl, stat == "mean" & fix == "fixn" & gazed %in% c("face", "body"))$measure - subset(dscr.fix.rpl, stat == "se" & fix == "fixn" & gazed %in% c("face", "body"))$measure,
ymax=subset(dscr.fix.rpl, stat == "mean" & fix == "fixn" & gazed %in% c("face", "body"))$measure + subset(dscr.fix.rpl, stat == "se" & fix == "fixn" & gazed %in% c("face", "body"))$measure),
width=.2,
position=position_dodge(.9)) +
## Significanes from duration!!!
#geom_signif(annotation="***", y_position=.19, xmin=1, xmax=2, tip_length = 0.01, vjust = 0.5) + # free - mem: p < .001
#geom_signif(annotation="***", y_position=.42, xmin=1.188, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # not-gazed free - not-gazed mem: p < .001,
#geom_signif(annotation="**", y_position=.40, xmin=0.81, xmax=1.81, tip_length = 0.01, vjust = 0.5) + # gazed free - gazed mem: p < .003
#geom_signif(annotation="*", y_position=.17, xmin=0.81, xmax=1.188, tip_length = 0.01, vjust = 0.5) + # gazed free - not gazed free: p = .01
#geom_signif(annotation="n.s.", y_position=.17, xmin=1.81, xmax=2.188, tip_length = 0.01, vjust = 0) + # gazed mem - not gazed mem: p = .679
scale_y_continuous(name = element_blank(), labels = scales::percent_format(), limits = cLimitsHeads) +
scale_x_discrete(name = element_blank(), labels=cLabels) +
scale_fill_manual(name = element_blank(), values=cColors) +
labs(title = " ", subtitle = "Fixation number") +
cTheme
p8.fixlat.rpl <- ggplot(subset(dscr.fix.rpl, stat == "mean" & fix == "fixlat" & gazed %in% c("face", "body")), aes(x= group, y= measure, fill = gazed)) +
geom_col(position = "dodge") +
geom_errorbar(aes(
ymin=subset(dscr.fix.rpl, stat == "mean" & fix == "fixlat" &  gazed %in% c("face", "body"))$measure - subset(dscr.fix.rpl, stat == "se" & fix == "fixlat" & gazed %in% c("face", "body"))$measure,
ymax=subset(dscr.fix.rpl, stat == "mean" & fix == "fixlat" &  gazed %in% c("face", "body"))$measure + subset(dscr.fix.rpl, stat == "se" & fix == "fixlat" & gazed %in% c("face", "body"))$measure),
width=.2,
position=position_dodge(.9)) +
#geom_signif(annotation="***", y_position=3300, xmin=1, xmax=2, tip_length = 0.01, vjust = 0.5) + # free - mem: p < .001
#geom_signif(annotation="***", y_position=.42, xmin=1.188, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # not-gazed free - not-gazed mem: p < .001,
#geom_signif(annotation="***", y_position=.40, xmin=0.81, xmax=1.81, tip_length = 0.01, vjust = 0.5) + # gazed free - gazed mem: p < .001
#geom_signif(annotation="***", y_position=3100, xmin=0.81, xmax=1.188, tip_length = 0.01, vjust = 0.5) + # gazed free - not gazed free: p < .001
#geom_signif(annotation="***", y_position=3100, xmin=1.81, xmax=2.188, tip_length = 0.01, vjust = 0.5) + # gazed mem - not gazed mem: p < .001
scale_y_continuous(name = element_blank(), limits = c(0,2800)) +
scale_x_discrete(name = element_blank(), labels=cLabels) +
scale_fill_manual(name = element_blank(), values=cColors) +
labs(title = " ", subtitle = "Fixation latency") +
cTheme
grid.arrange(p6.fixdur.rpl, p7.fixnum.rpl, p8.fixlat.rpl, cLegendHead, layout_matrix = rbind(c(1,2,3,4)))
rm(p6.fixdur.rpl, p7.fixnum.rpl, p8.fixlat.rpl, cLegendHead, cLimitsHeads, cTheme, cColors, cLabels)
# ANOVA Fixations characteristics for joint attention
## 2 (Group) x 2 (Gaze) ANOVA
icond <- gl(2,1,labels=c("cued","uncued")) # within-factor
idata <- data.frame(icond)
for (st in seq(7,16,4)) { # Variables 7:16, every 4th: fix.gaze and fix.nogaze; fixn.gaze and ...
carmod <- lm(as.matrix(df.w.et[,st:(st+1)]) ~ df.w.et$group)
#print(colnames(df.w.et[,st:(st+1)]))
#print(Anova(carmod, idata=idata, idesign=~icond, type="III"))
assign(paste0("anova.",colnames(df.w.et)[st]), Anova(carmod, idata=idata, idesign=~icond, type="III"))
assign(paste0("apa.anova.",colnames(df.w.et)[st]), apa_print(Anova(carmod, idata=idata, idesign=~icond, type="III"), correction="GG", mse = FALSE))
}
rm(carmod, idata, icond, st)
# ANOVA Saccades
## 2 (Group) x 2 (Gaze) ANOVA
icond <- gl(2,1,labels=c("cued","uncued")) # within-factor
idata <- data.frame(icond)
for (st in 17:19) {
carmod <- lm(as.matrix(df.w.et[,c(st,(st+3))]) ~ df.w.et$group)
#print(colnames(df.w.et[,c(st,(st+3))]))
#print(Anova(carmod, idata=idata, idesign=~icond, type="III"))
assign(paste0("anova.",colnames(df.w.et)[st]), Anova(carmod, idata=idata, idesign=~icond, type="III"))
assign(paste0("postHoc.",colnames(df.w.et)[st]), lsmeans::lsmeans(carmod, specs = c(names(carmod$model[2]), "rep.meas")))
assign(paste0("apa.anova.",colnames(df.w.et)[st]), apa_print(Anova(carmod, idata=idata, idesign=~icond, type="III"), correction="GG", mse = FALSE))
}
rm(carmod, idata, icond, st)
# Recalled items
# 2 (Condition) x 2 (Gaze) ANOVA (auf erinnerte Details)
imem <- gl(2,1,labels=c("cued","uncued"))
idata <- data.frame(imem)
# Car
carmod <- lm(as.matrix(df.w.mem[,3:4]) ~ df.w.mem$bed)
#print(colnames(df.w.mem[c(3,4)]))
#print(Anova(carmod, idata=idata, idesign=~imem, type="III"))
anova.mem <- Anova(carmod, idata=idata, idesign=~imem, type="III")
apa.anova.mem <- apa_print(Anova(carmod, idata=idata, idesign=~imem, type="III"), correction="GG", mse = FALSE)
rm(imem, idata, carmod)
# Descriptives for fixation chacracteristics for social attention
dscr.fixsoc <- df.w.et %>% summarise(mean(fix.face), sd(fix.face), mean(fix.body), sd(fix.body), mean(fixn.face), sd(fixn.face), mean(fixn.body), sd(fixn.body), mean(fixlat.face), sd(fixlat.face), mean(fixlat.body), sd(fixlat.body))
dscr.fixsoc.group <- df.w.et %>% group_by(group) %>% summarise(mean(fix.face), sd(fix.face), mean(fix.body), sd(fix.body), mean(fixn.face), sd(fixn.face), mean(fixn.body), sd(fixn.body), mean(fixlat.face), sd(fixlat.face), mean(fixlat.body), sd(fixlat.body))
# ANOVA Fixations characteristics
## 2 (Group) x 2 (Face/Body) ANOVA
icond <- gl(2,1,labels=c("head","body")) # within-factor
idata <- data.frame(icond)
for (st in seq(5,16,4)) { # Variables 5:16, every 4th: fix.face and fix.noface; fixn.face and ...
carmod <- lm(as.matrix(df.w.et[,st:(st+1)]) ~ df.w.et$group)
#print(Anova(carmod, idata=idata, idesign=~icond, type="III"))
assign(paste0("anova.",colnames(df.w.et)[st]), Anova(carmod, idata=idata, idesign=~icond, type="III"))
assign(paste0("apa.anova.",colnames(df.w.et)[st]), apa_print(Anova(carmod, idata=idata, idesign=~icond, type="III"), correction="GG", mse = FALSE))
}
rm(carmod, idata, icond, st)
# # plots
#
# plot.face.free_vs_mem <- df.l.et %>%
#   filter(fixations=="fix" & region=="face") %>%
#   ggpubr::ggboxplot(x = "fixations", y = "value",
#                 fill = "group", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
#                 add = "jitter", shape = "group") #+
#   #stat_compare_means()
# #plot.face.free_vs_mem
# Fixations Face in Free Viewing vs. Explicit Encoding
for (st in seq(5,16,4)) {
msd <- c(mean(df.w.et[df.w.et$group=="free",st]),sd(df.w.et[df.w.et$group=="free",st]),
mean(df.w.et[df.w.et$group=="mem",st]),sd(df.w.et[df.w.et$group=="mem",st]))
teststat <- t.test(df.w.et[,st] ~ df.w.et$group)
assign(paste0("ttest.",colnames(df.w.et)[st]), data.frame(M.free=msd[1],SD.free=msd[2], M.mem=msd[3], SD.mem=msd[4],  df=teststat$parameter, t=teststat$statistic, p=teststat$p.value))
assign(paste0("apa.ttest.",colnames(df.w.et)[st]), apa_print(t.test(df.w.et[,st] ~ df.w.et$group)))
}
rm(msd, teststat, st)
r_refs(file = "r-references.bib")
warnings()
?Anova()
?lm()
?apa_table()
t10 <- cbind(t6, t7[-1],t8[-1], t9[-1])
install.packages("tidyverse")
install.packages("car")
install.packages("car")
install.packages("kableExtra")
install.packages("xml2")
install.packages("xml2")
install.packages("kableExtra")
install.packages("ggpubr")
install.packages("lsmeans")
install.packages("tidyverse")
library(tidyverse)
